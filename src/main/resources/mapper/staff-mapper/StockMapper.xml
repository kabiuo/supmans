<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniu.supmans.dao.staff.StockMapper">
  <resultMap id="BaseResultMap" type="com.woniu.supmans.bean.staff.Stock">
    <id column="stockID" jdbcType="INTEGER" property="stockid" />
    <result column="stockmID" jdbcType="INTEGER" property="stockmid" />
    <result column="stocktypeID" jdbcType="INTEGER" property="stocktypeid" />
  </resultMap>
  <resultMap id="BaseResultMapWithMT" type="com.woniu.supmans.bean.staff.Stock">
    <id column="stockID" jdbcType="INTEGER" property="stockid" />
    <result column="stockmID" jdbcType="INTEGER" property="stockmid" />
    <result column="stocktypeID" jdbcType="INTEGER" property="stocktypeid" />
    <association property="merch" javaType="com.woniu.supmans.bean.staff.Merch">
      <id column="merchID" property="merchid"/>
      <result column="merchname" property="merchname"/>
      <result column="merchaddress" property="merchaddress"/>
      <result column="merchPD" property="merchpd"/>
      <result column="merchGP" property="merchgp"/>
      <result column="merchprice" property="merchprice"/>
      <result column="merchtype" property="merchtype"/>
      <result column="merchnumber" property="merchnumber"></result>
    </association>
    <!-- 指定联合查询出的类型字段的封装 -->
    <association property="type" javaType="com.woniu.supmans.bean.staff.Type">
      <id column="typeID" property="typeid"/>
      <result column="typename" property="typename"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stockID, stockmID, stocktypeID
  </sql>
  <sql id="Base_Column_List_MType">
    s.stockID, s.stockmID, s.stocktypeID, m.merchID, m.merchname, m.merchaddress, m.merchPD, m.merchGP, m.merchprice, m.merchtype, m.merchnumber, t.typeID, t.typename
  </sql>
  <select id="selectByExampleWithMType" parameterType="com.woniu.supmans.bean.staff.StockExample" resultMap="BaseResultMapWithMT">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List_MType" />
    from stock as s LEFT JOIN merch as m ON s.stockmID = m.merchID
    LEFT JOIN type as t ON s.stocktypeID = t.typeID
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    order by s.stockID
    <!--<if test="orderByClause != null">-->
      <!--order by ${orderByClause}-->
    <!--</if>-->
  </select>
  <select id="selectByExample" parameterType="com.woniu.supmans.bean.staff.StockExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stock
    where stockID = #{stockid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stock
    where stockID = #{stockid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniu.supmans.bean.staff.StockExample">
    delete from stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniu.supmans.bean.staff.Stock">
    insert into stock (stockID, stockmID, stocktypeID
      )
    values (#{stockid,jdbcType=INTEGER}, #{stockmid,jdbcType=INTEGER}, #{stocktypeid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.supmans.bean.staff.Stock">
    insert into stock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stockid != null">
        stockID,
      </if>
      <if test="stockmid != null">
        stockmID,
      </if>
      <if test="stocktypeid != null">
        stocktypeID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stockid != null">
        #{stockid,jdbcType=INTEGER},
      </if>
      <if test="stockmid != null">
        #{stockmid,jdbcType=INTEGER},
      </if>
      <if test="stocktypeid != null">
        #{stocktypeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniu.supmans.bean.staff.StockExample" resultType="java.lang.Long">
    select count(*) from stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update stock
    <set>
      <if test="record.stockid != null">
        stockID = #{record.stockid,jdbcType=INTEGER},
      </if>
      <if test="record.stockmid != null">
        stockmID = #{record.stockmid,jdbcType=INTEGER},
      </if>
      <if test="record.stocktypeid != null">
        stocktypeID = #{record.stocktypeid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stock
    set stockID = #{record.stockid,jdbcType=INTEGER},
      stockmID = #{record.stockmid,jdbcType=INTEGER},
      stocktypeID = #{record.stocktypeid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.supmans.bean.staff.Stock">
    update stock
    <set>
      <if test="stockmid != null">
        stockmID = #{stockmid,jdbcType=INTEGER},
      </if>
      <if test="stocktypeid != null">
        stocktypeID = #{stocktypeid,jdbcType=INTEGER},
      </if>
    </set>
    where stockID = #{stockid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.supmans.bean.staff.Stock">
    update stock
    set stockmID = #{stockmid,jdbcType=INTEGER},
      stocktypeID = #{stocktypeid,jdbcType=INTEGER}
    where stockID = #{stockid,jdbcType=INTEGER}
  </update>
</mapper>